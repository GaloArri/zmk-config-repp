//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define _BL 0  // base layer
#define _NL 1  // num layer
#define _FL 2  // function layer
#define _GL 3  // game layer
#define QUICK_TAP_MS 125
#define TAPPING_TERM_MS 180

&mt {
    quick-tap-ms = <QUICK_TAP_MS>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <TAPPING_TERM_MS>;
};

&lt {
    quick-tap-ms = <QUICK_TAP_MS>;
    global-quick-tap;
    flavor = "balanced";
    tapping-term-ms = <TAPPING_TERM_MS>;
    quick-tap-ms = <200>;                   // Allows hold function when double-tapping
    retro-tap;                              // Enables tap on release
};

/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <100>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <100>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
        };

        ctrl_bspc: ctrl_backspace {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp LC(BSPC)>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            label = "BL";
            bindings = <
         &kp Q       &kp W       &kp E        &kp R        &kp T      &kp Y      &kp U            &kp I         &kp O       &kp P
         &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G      &kp H      &mt RSHFT J      &mt RCTRL K   &mt RALT L  &mt RGUI SEMI
&kp SQT  &kp Z       &kp X       &kp C        &kp V        &kp B      &kp N      &kp M            &kp COMMA     &kp PERIOD  &kp SLASH      &kp SQT
                                 &gresc       &lt 1 SPACE  &kp TAB    &kp ENTER  &lt 1 BACKSPACE  &lt 2 DELETE
            >;
        };

        num_layer {
            label = "NL";
            bindings = <
           &none     &kp N7  &kp N8  &kp N9  &kp COMMA    &none           &none      &kp LPAR        &kp RPAR         &none
           &none     &kp N4  &kp N5  &kp N6  &kp DOT      &kp MINUS       &kp EQUAL  &kp LBKT        &kp RBKT         &kp RA(N)
&kp RA(N)  &kp BSLH  &kp N1  &kp N2  &kp N3  &kp N0       &kp UNDERSCORE  &kp PLUS   &kp LEFT_BRACE  &kp RIGHT_BRACE  &none      &kp RBRC
                             &none   &trans  &trans       &trans          &trans     &trans
            >;
        };

        function_layer {
            label = "FL";
            bindings = <
       &none  &kp F7       &kp F8  &kp F9  &kp F12    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END  &kp PSCRN
       &none  &none        &kp F4  &kp F5  &kp F6     &kp F11   &kp LEFT   &kp DOWN   &kp UP   &kp RIGHT
&none  &none  &bootloader  &none   &kp F1  &kp F2     &kp F3    &kp F10    &none      &none    &none      &tog 3
                           &none   &tog 0  &trans     &trans    &trans     &trans
            >;
        };

        game_layer {
            bindings = <
           &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans
           &kp A   &kp S   &kp D   &kp F      &trans       &trans  &kp J   &kp K   &kp L   &kp SEMI
&kp LCTRL  &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans    &trans
                           &trans  &kp SPACE  &kp LSHFT    &trans  &trans  &trans
            >;

            label = "GL";
        };
    };
};
